library("class", lib.loc="C:/Program Files/R/R-3.1.1/library")
install.packages("slidify")
install.packages("ggplot2")
library(devtools)
install.packages("devtools")
find.package("devtools")
library(devtools)
find_rtools()
install.packages("KernSmooth")
library(kernsmooth)
library(KernSmooth)
cube <- function(x, n) {
x^3
}
cube(3)
x <- 1:10
if(x > 5) {
x <- 0
}
f <- function(x) {
g <- function(y) {
y + z
}
z <- 4
x + g(x)
}
z <- 10
f(3)
x <- 5
y <- if(x < 3) {
NA
} else {
10
}
y
h <- function(x, y = NULL, d = 3L) {
z <- cbind(x, d)
if(!is.null(y))
z <- z + y
else
z <- z + f
g <- x + y / z
if(d == 3L)
return(g)
g <- g + 10
g
}
install.packages("swirl")
library(swirl)
swirl()
swirl()()
swirl()
library(swirl)
swirl()
5+7
X <- 5+7
x <- 5 + 7
x
y <- x - 3
y
c(1.1, 9, 3.14)
z <- c(1.1, 9, 3.14)
?c
z
c(z, 555, z)
z *2 + 100
my_sqrt <- sqrt(z - 1)
my_sqrt
my_div <- z/my_sqrt
my_div
c(1, 2, 3, 4) + c(0, 10)
c(1, 2, 3, 4) + c(0, 10, 100)
c(1, 2, 3, 4) + c(0, 10, 100)
z *2 + 100
z
| * 2 + 1000)
z *2 + 1000
my_div
getwd()
ls()
x <- 9
ls()
list.files()
?list.files
args()
args(list.files())
args(list.files)
old.dir <- getwd()
dir.create(testdir)
dir.create('testdir')
ls()
setwd(testdir)
setwd('testdir')
file.create(mytest.R)
file.create('mytest.R')
ls()
dir()
file.exists("mytest.R")
file.info("mytest.R")
file.rename("mytest.R", "mytest2.R")
file.copy("mytest2.R", "mytest3.R")
file.path(mytest3.R)
file.path("mytest3.R")
file.path("folder1", "folder2")
?dir.create
dir.create("tetsdir2", "testdir3", recursive = TRUE)
dir.create(file.path('testdir2', 'testdir3'), recursive = TRUE)
?unlink
unlink("testir2")
unlink("testir2", recursive = TRUE)
unlink("testir2", recursive = TRUE)
unlink("testdir2", recursive = TRUE)
setwd(old.dir)
unlink('testdir', recursive = TRUE)
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
bye()
bye()
boohoo
boohoo <- c(1, 2, 3)
a = 4
a + boohoo
a = c(4, 5)
a + boohoo
install.packages("dplyr")
install.packages("installr")
setInternet2(TRUE)
installr::updateR()
install.packages("dplyr")
swirl()
library(swirl)
install.packages("swirl")
swirl()
library(swirl)
swirl()
install_from_swirl("Getting and Cleaning Data")
swirl()
mydf <- read.csv(path2csv,stringAsFactors=FALSE)
mydf <- read.csv(path2csv,stringAsFactors = FALSE)
mydf <- read.csv(path2csv,stringsAsFactors=FALSE)
dim(mydf)
head(mydf)
library(dplyr)
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran r_arch:country)
select(cran, r_arch:country)
select(cran, country:r_arch)
cran
print(cran)
select(cran, -time)
select(cran, -5:20)
select(cran, -5:-20)
-5:20
-5:-20
-(5:20)
select(cran, -(5:20))
select(cran, -(x:size))
select(cran, -(X:size))
filter(cran, package == "swirl")
filer(cran, r_version == "3.1.1", country == "US")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, r_version <= "3.0.2", country == "IN")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na(c(3, 5, NA 10))
is.na(c(3, 5, NA, 10))
!is.na(c(3,5,NA,10))
filter(cran, r_version == !is.na())
filter(cran, !is.na(r_version))
cran2 <- select(cran, :ip_id)
cran2 <- select(cran, ip_id)
cran2 <- select(cran, size:ip_id)
arrange(cran2, ip_id)
cran2
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size - 1000)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
library(dplyr)
cran <- tbl_df(mydf)
rm("mydf")
cran
bye()
swirl()
library(swirl)
swirl()
group_by()
group_by(cran)
?group_by
by_package <- group_by(cran, package)
by_package
summarize(cran, mean(size))
summarize(by_package, mean(size))
?n
?n_distinct
submit()
pack_sum
quantile(pack_sum$count, probs = 0.99)
top_counts <- filter(pack_sum, count > 679)
top_counts
View(top_counts)
top_counts_sorted <- arrange(top_counts, desc(count))
View(top_counts_sorted)
quantile(pack_sum$unique, probs = 0.99)
top-unique <- filter(pack_sum, unique > 465)
top_unique <- filter(pack_sum, unique > 465)
View(top_unique)
top_unique_sorted <- arrange(top_unique, desc(unique))
View(top_unique_sorted)
submit()
submit()
submit()
View()
View(result3)
submit()
submit()
submit()
submit()
submit()
library(tidyr)
students
?gather
gather(students, sex, count, -grade)
students2
res <- gather(sex_class, count)
res <- gather()
res <- gather(count)
res <- gather(students2, count)
res <- gather(students2, sex_class, count, -grade)
res
?separate
separate(res, data=res, col=sex_class, into = c("sex", "class")
)
separate(data=res, col=sex_class, into = c("sex", "class"))
submit()
submit()
students3
?gather
submit()
?spread
submit()
submit()
submit()
submit()
submit()
extract_numeric("class")
extract_numeric("class5")
?mutate)
?mutate
submit()
submit()
submit()
students3
submit()
?extract_numeric
reset()
submit()
info()
submit()
students4
submit()
submit()
submit()
submit()
passed
failed
mutate(passed, status = "passed")
passed <- passed %>% mutate(status = "passed")
failed <- failed %>% mutate(status = "failed")
bind_rows(passed, failed)
sat
?separate
?select
?gather
submit()
?group_by
submit()
swirl()
library(swril)
library(swirl)
swirl()
sys.getlocale("LC_TIME")
library(sys)
?Sys.getlocale
Sys.getlocale("LC_TIME")
library(lubridate)
help(package = lubridate)
this_day <- today()
this_day
day(this_day)
wday()
wday(this_day)
wday(this_day, label = TRUE)
this_moment <- now()
this_moment
hour()
hour(this_moment)
ymd("1989-05-17")
my_date <- ymd("1989-05-17")
my_date
class(my_date)
ymd("1989 May 17")
mdy("March12, 1975")
mdy("March 12, 1975")
dmy(25081985)
ymd("192012")
ymd("1920-1-2")
dt1
ymd_hms(dt1)
hms("03:22:14")
dt2
ymd(dt2)
update(this_moment, hours = 8, minutes = 34, seconds = 55)
this_moment
update(this_moment, hours = 3, minutes = 50, seconds = 0)
update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment <- update(this_moment, hours = 10, minutes = 16, seconds = 0)
this_moment
?now
nyc <- now("America/New_York")
nyc
depart <- nyc + days(2)
depart
depart <- update(depart, hours = 17, minutes = 34)
depart
arrive <- depart + hours(15) + minutes(50)
?with_tz
arrive <- with_tz(arrive, tzone = "Asia/Hong_Kong")
arrive
last_time <- mdy("June 17, 2008", tz = "Singapore")
last_time
?new_interval()
?new_interval
how_long <- new_interval(last_time, arrive)
as.periood(how_long)
as.period(how_long)
stopwatch()
setwd("C:/Files/Coursera/Reproducible Research/Week 1/RepData_PeerAssessment1")
a <- 1 + 2
a
?print
print(a)
a <- 1 + 1
a <- 1 + 1
---
title: "Reproducible Research: Peer Assessment 1"
output:
html_document:
keep_md: true
---
## Loading and preprocessing the data
a <- 1 + 1
print(a)
## What is mean total number of steps taken per day?
## What is the average daily activity pattern?
## Imputing missing values
## Are there differences in activity patterns between weekdays and weekends?
source('C:/Files/Coursera/Reproducible Research/Week 1/RepData_PeerAssessment1/PA1_template.Rmd')
